# https://circleci.com/docs/2.0/configuration-reference/
version: 2.1
orbs:
  # https://github.com/cypress-io/circleci-orb
  cypress: cypress-io/cypress@1.29.0 # used to run e2e tests
  win: circleci/windows@2 # run a test job on Windows

jobs:
  unit:
    description: Checks the code formatting
    docker:
      - image: cimg/node:16.9.1
        environment:
          # we don't need Cypress to check code styl
          CYPRESS_INSTALL_BINARY: '0'
    steps:
      - checkout
      - run:
          name: Install dependencies ðŸ“¦
          # installs NPM dependencies but skips Cypress
          command: CYPRESS_INSTALL_BINARY=0 npm ci
      - run:
          name: Code style check ðŸ§¹
          command: npm run format:check
      - run:
          name: Types lint ðŸ§¹
          command: npm run types
  publish:
    description: Publishes the new version of the plugin to NPM
    docker:
      - image: cimg/node:16.9.1
    environment:
      # we don't need Cypress to do the release
      CYPRESS_INSTALL_BINARY: '0'
      # trick semantic-release into thinking this is NOT a pull request
      # (under the hood the module env-ci is used to check if this is a PR)
      CIRCLE_PR_NUMBER: ''
      CIRCLE_PULL_REQUEST: ''
      CI_PULL_REQUEST: ''
    steps:
      - checkout
      - run: npm ci
      - run: npm run semantic-release

  cyrun:
    docker:
      - image: cypress/base:16.13.2
    parameters:
          jobname:
            type: string
    steps:
      - attach_workspace:
              at: ~/ 
      - run:
          command: npm run test
          working_directory: examples/<< parameters.jobname >>
      - run: cat examples/<< parameters.jobname >>/.nyc_output/out.json
      - run: cat examples/<< parameters.jobname >>/coverage/coverage-final.json
      - store_artifacts:
          path: examples/<< parameters.jobname >>/coverage
      - run:
          name: Verify Code Coverage
          command: npm run coverage:verify
          working_directory: examples/<< parameters.jobname >>
      - run:
          name: Check code coverage files ðŸ“ˆ
          # we will check the final coverage report
          # to make sure it only has files we are interested in
          # because there are files covered at 0 in the report
          command: npm run coverage:check-files
          working_directory: examples/<< parameters.jobname >>

workflows:
  build:
    jobs:
      # - unit

      - cypress/install:
          post-install:
            - run:
                name: Install deps for examples/old-cypress-config
                command: npm ci
                working_directory: examples/old-cypress-config
            # - run:
            #     name: Install deps for examples/new-cypress-config
            #     command: npm ci
            #     working_directory: examples/new-cypress-config
          post-steps:
            - run: npm run check:markdown     
      
      - cyrun:
          name: test-<< matrix.jobname>>
          requires: 
            - cypress/install
          matrix:
            parameters:
              jobname: 
                - old-cypress-config/all-files
                - old-cypress-config/backend
                - old-cypress-config/before-all-visit
                - old-cypress-config/exclude-files
                - old-cypress-config/frontend
                - old-cypress-config/fullstack
                - old-cypress-config/one-spec
                # - old-cypress-config/placeholders # leaving out as it currently errors during cypress run
                - old-cypress-config/same-folder
                - old-cypress-config/support-files
                - old-cypress-config/ts-example
      
     
      # - cypress/run:
      #     name: example-ts-example
      #     requires:
      #       - cypress/install
      #     # grab the workspace created by cypress/install job
      #     attach-workspace: true
      #     # there are no jobs to follow this one
      #     # so no need to save the workspace files (saves time)
      #     no-workspace: true
      #     working_directory: examples/old-cypress-config/ts-example
      #     start: npm start
      #     wait-on: 'http://localhost:1234'
      #     command: '../node_modules/.bin/cypress run'
      #     post-steps:
      #       # store the created coverage report folder
      #       # you can click on it in the CircleCI UI
      #       # to see live static HTML site
      #       - store_artifacts:
      #           path: examples/old-cypress-config/ts-example/coverage
      #       - run:
      #           command: npm run coverage:check
      #           working_directory: examples/old-cypress-config/ts-example
      #       - run:
      #           name: Check code coverage ðŸ“ˆ
      #           command: |
      #             ../../../node_modules/.bin/check-coverage main.ts
      #             ../../../node_modules/.bin/check-coverage calc.ts
      #             ../../../node_modules/.bin/only-covered main.ts calc.ts
      #           working_directory: examples/old-cypress-config/ts-example

      # - cypress/run:
      #     name: example-unit-tests-js
      #     requires:
      #       - cypress/install
      #     # grab the workspace created by cypress/install job
      #     attach-workspace: true
      #     # there are no jobs to follow this one
      #     # so no need to save the workspace files (saves time)
      #     no-workspace: true
      #     working_directory: examples/old-cypress-config/unit-tests-js
      #     command: ../node_modules/.bin/cypress run
      #     # store screenshots and videos
      #     store_artifacts: true
      #     post-steps:
      #       - run: cat examples/old-cypress-config/unit-tests-js/.nyc_output/out.json
      #       - run: cat examples/old-cypress-config/unit-tests-js/coverage/coverage-summary.json
      #       # store the created coverage report folder
      #       # you can click on it in the CircleCI UI
      #       # to see live static HTML site
      #       - store_artifacts:
      #           path: examples/old-cypress-config/unit-tests-js/coverage
      #       # make sure the examples captures 100% of code
      #       - run:
      #           command: npx nyc report --check-coverage true --lines 100
      #           working_directory: examples/old-cypress-config/unit-tests-js
      #       - run:
      #           name: Check code coverage ðŸ“ˆ
      #           command: |
      #             ../../../node_modules/.bin/check-coverage misc.js
      #             ../../../node_modules/.bin/only-covered misc.js
      #           working_directory: examples/old-cypress-config/unit-tests-js

      # - cypress/run:          
      #     name: example-use-webpack
      #     requires:
      #       - cypress/install
      #     # grab the workspace created by cypress/install job
      #     attach-workspace: true
      #     # there are no jobs to follow this one
      #     # so no need to save the workspace files (saves time)
      #     no-workspace: true
      #     working_directory: examples/old-cypress-config/use-webpack
      #     build: npm run build
      #     start: npm start
      #     wait-on: 'http://localhost:1234'
      #     command: '../node_modules/.bin/cypress run'
      #     # wrong path when using working_directory
      #     # https://github.com/cypress-io/circleci-orb/issues/265
      #     # store screenshots and videos
      #     # store_artifacts: true
      #     post-steps:
      #       - store_artifacts:
      #           path: examples/old-cypress-config/use-webpack/cypress/videos
      #       - store_artifacts:
      #           path: examples/old-cypress-config/use-webpack/cypress/screenshots
      #       # store the created coverage report folder
      #       # you can click on it in the CircleCI UI
      #       # to see live static HTML site
      #       - store_artifacts:
      #           path: examples/old-cypress-config/use-webpack/coverage
      #       - run:
      #           name: Check code coverage ðŸ“ˆ
      #           command: |
      #             ../../../node_modules/.bin/check-coverage src/index.js
      #             ../../../node_modules/.bin/check-coverage src/calc.js
      #             ../../../node_modules/.bin/only-covered src/index.js src/calc.js
      #           working_directory: examples/old-cypress-config/use-webpack


      # - cypress/run:
      #     name: Windows test
      #     executor:
      #       # executor comes from the "windows" orb
      #       name: win/default
      #       shell: bash.exe
      #     no-workspace: true
      #     start: npm run start:windows --prefix examples/old-cypress-config/all-files
      #     wait-on: 'http://localhost:1234'
      #     command: ../node_modules/.bin/cypress run
      #     # store screenshots and videos
      #     store_artifacts: true
      #     post-steps:
      #       - run: cat examples/old-cypress-config/all-files/.nyc_output/out.json
      #       - run: cat examples/old-cypress-config/all-files/coverage/coverage-final.json
      #       # store the created coverage report folder
      #       # you can click on it in the CircleCI UI
      #       # to see live static HTML site
      #       - store_artifacts:
      #           path: examples/old-cypress-config/all-files/coverage
      #       # make sure the examples captures 100% of code
      #       - run:
      #           command: npx nyc report --check-coverage true --lines 100
      #           working_directory: examples/old-cypress-config/all-files
      #       - run:
      #           name: Check code coverage ðŸ“ˆ
      #           # we will check the final coverage report
      #           # to make sure it only has files we are interested in
      #           # because there are files covered at 0 in the report
      #           command: |
      #             ../../node_modules/.bin/check-coverage main.js
      #             ../../node_modules/.bin/check-coverage second.js
      #             ../../node_modules/.bin/check-coverage not-covered.js
      #             ../../node_modules/.bin/only-covered --from coverage/coverage-final.json main.js second.js not-covered.js
      #           working_directory: examples/old-cypress-config/all-files

      # - publish:
      #     filters:
      #       branches:
      #         only:
      #           - master
      #           - beta
      #     requires:
      #       - unit
      #       - backend coverage
      #       - fullstack coverage
      #       - example-before-each-visit
      #       - example-before-all-visit
      #       - example-ts-example
      #       - example-same-folder
      #       - example-support-files
      #       - example-use-plugins-and-support
      #       - example-exclude-files
      #       - example-docker-paths
      #       - example-use-webpack
      #       - example-all-files
      #       - example-unit-tests-js
      #       - Windows test
