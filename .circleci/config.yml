# https://circleci.com/docs/2.0/configuration-reference/
version: 2.1
orbs:
  # https://github.com/cypress-io/circleci-orb
  cypress: cypress-io/cypress@1.26.0 # used to run e2e tests
  # node: circleci/node@1.1.6 # used to publish new NPM version
  win: circleci/windows@2 # run a test job on Windows

jobs:
  unit:
    description: Checks the code formatting
    docker:
      - image: cimg/node:16.9.1
    # executor:
    #   name: node/default
    #   tag: '12'
    environment:
      # we don't need Cypress to check code style
      CYPRESS_INSTALL_BINARY: '0'
    steps:
      - checkout
      # - node/with-cache:
      #     steps:
      - run:
          name: Install dependencies ðŸ“¦
          # installs NPM dependencies but skips Cypress
          command: CYPRESS_INSTALL_BINARY=0 npm ci
      - run:
          name: Code style check ðŸ§¹
          command: npm run format:check
      - run:
          name: Types lint ðŸ§¹
          command: npm run types

  publish:
    description: Publishes the new version of the plugin to NPM
    docker:
      - image: cimg/node:16.9.1
    # executor:
    #   name: node/default
    #   tag: '12'
    environment:
      # we don't need Cypress to do the release
      CYPRESS_INSTALL_BINARY: '0'
      # trick semantic-release into thinking this is NOT a pull request
      # (under the hood the module env-ci is used to check if this is a PR)
      CIRCLE_PR_NUMBER: ''
      CIRCLE_PULL_REQUEST: ''
      CI_PULL_REQUEST: ''
    steps:
      - checkout
      # - node/with-cache:
      #     steps:
      - run: npm ci
      - run: npm run semantic-release

workflows:
  build:
    jobs:
      # - unit

      - cypress/install:
          post-steps:
            - run: npm run check:markdown
          post-install:
            - run:
                command: npm ci
                working_directory: examples/old-cypress-config

      - cypress/run:
          name: example-all-files
          requires:
            - cypress/install
          # grab the workspace created by cypress/install job
          attach-workspace: true
          # there are no jobs to follow this one
          # so no need to save the workspace files (saves time)
          no-workspace: true
          working_directory: examples/old-cypress-config/all-files
          start: npm start
          wait-on: 'http://localhost:1234'
          # command: npx cypress run --project examples/all-files
          command: ../node_modules/.bin/cypress run
          # store screenshots and videos
          store_artifacts: true
          post-steps:
            - run: cat examples/old-cypress-config/all-files/.nyc_output/out.json
            - run: cat examples/old-cypress-config/all-files/coverage/coverage-final.json
            # store the created coverage report folder
            # you can click on it in the CircleCI UI
            # to see live static HTML site
            - store_artifacts:
                path: examples/old-cypress-config/all-files/coverage
            # make sure the examples captures 100% of code
            - run:
                command: npx nyc report --check-coverage true --lines 100
                working_directory: examples/old-cypress-config/all-files
            - run:
                name: Check code coverage ðŸ“ˆ
                # we will check the final coverage report
                # to make sure it only has files we are interested in
                # because there are files covered at 0 in the report
                command: |
                  ../../../node_modules/.bin/check-coverage main.js
                  ../../../node_modules/.bin/check-coverage second.js
                  ../../../node_modules/.bin/check-coverage not-covered.js
                  ../../../node_modules/.bin/only-covered --from coverage/coverage-final.json main.js second.js not-covered.js
                working_directory: examples/old-cypress-config/all-files

      - cypress/run:
          name: backend coverage
          requires:
            - cypress/install
          # grab the workspace created by cypress/install job
          attach-workspace: true
          # there are no jobs to follow this one
          # so no need to save the workspace files (saves time)
          no-workspace: true
          working_directory: examples/old-cypress-config/backend
          start: npm start
          wait-on: 'http://localhost:3003'
          command: ../node_modules/.bin/cypress run
          post-steps:
            # store the created coverage report folder
            # you can click on it in the CircleCI UI
            # to see live static HTML site
            - store_artifacts:
                path: examples/old-cypress-config/backend/coverage
            - run:
                command: npm run coverage:report
                working_directory: examples/old-cypress-config/backend
            - run:
                name: Check code coverage ðŸ“ˆ
                command: |
                  ../../../node_modules/.bin/check-coverage server.js
                  ../../../node_modules/.bin/only-covered server.js
                working_directory: examples/old-cypress-config/backend

      - cypress/run:
          name: example-before-all-visit
          requires:
            - cypress/install
          # grab the workspace created by cypress/install job
          attach-workspace: true
          # there are no jobs to follow this one
          # so no need to save the workspace files (saves time)
          no-workspace: true
          working_directory: examples/old-cypress-config/before-all-visit
          start: npm start
          wait-on: 'http://localhost:1234'
          command: '../node_modules/.bin/cypress run'
          # store screenshots and videos
          store_artifacts: true
          post-steps:
            - run:
                command: cat .nyc_output/out.json
                working_directory: examples/old-cypress-config/before-all-visit
            # store the created coverage report folder
            # you can click on it in the CircleCI UI
            # to see live static HTML site
            - store_artifacts:
                path: examples/old-cypress-config/before-all-visit/coverage
            # make sure the examples captures 100% of code
            - run:
                command: npx nyc report --check-coverage true --lines 100
                working_directory: examples/old-cypress-config/before-all-visit
            - run:
                name: Check code coverage ðŸ“ˆ
                command: |
                  ../../../node_modules/.bin/check-coverage main.js
                  ../../../node_modules/.bin/only-covered main.js
                working_directory: examples/old-cypress-config/before-all-visit

      - cypress/run:
          name: example-before-each-visit
          requires:
            - cypress/install
          # grab the workspace created by cypress/install job
          attach-workspace: true
          # there are no jobs to follow this one
          # so no need to save the workspace files (saves time)
          no-workspace: true
          working_directory: examples/old-cypress-config/before-each-visit
          start: npm start
          wait-on: 'http://localhost:1234'
          command: '../node_modules/.bin/cypress run'
          # store screenshots and videos
          store_artifacts: true
          post-steps:
            - run:
                command: cat .nyc_output/out.json
                working_directory: examples/old-cypress-config/before-each-visit
            # store the created coverage report folder
            # you can click on it in the CircleCI UI
            # to see live static HTML site
            - store_artifacts:
                path: examples/old-cypress-config/before-each-visit/coverage
            # make sure the examples captures 100% of code
            - run:
                command: npx nyc report --check-coverage true --lines 100
                working_directory: examples/old-cypress-config/before-each-visit
            - run:
                name: Check code coverage ðŸ“ˆ
                command: |
                  ../../../node_modules/.bin/check-coverage main.js
                  ../../../node_modules/.bin/only-covered main.js
                working_directory: examples/old-cypress-config/before-each-visit

      - cypress/run:
          name: example-exclude-files
          requires:
            - cypress/install
          # grab the workspace created by cypress/install job
          attach-workspace: true
          # there are no jobs to follow this one
          # so no need to save the workspace files (saves time)
          no-workspace: true
          working_directory: examples/old-cypress-config/exclude-files
          start: npm start
          wait-on: 'http://localhost:1234'
          command: ../node_modules/.bin/cypress run
          # store screenshots and videos
          store_artifacts: true
          post-steps:
            - run:
                command: cat .nyc_output/out.json
                working_directory: examples/old-cypress-config/exclude-files
            - run:
                command: cat coverage/coverage-final.json
                working_directory: examples/old-cypress-config/exclude-files
            # store the created coverage report folder
            # you can click on it in the CircleCI UI
            # to see live static HTML site
            - store_artifacts:
                path: examples/old-cypress-config/exclude-files/coverage
            # make sure the examples captures 100% of code
            - run:
                command: npx nyc report --check-coverage true --lines 100
                working_directory: examples/old-cypress-config/exclude-files
            - run:
                name: Check code coverage ðŸ“ˆ
                # we will check the final coverage report
                # to make sure it only has files we are interested in
                command: |
                  ../../../node_modules/.bin/check-coverage main.js
                  ../../../node_modules/.bin/only-covered --from coverage/coverage-final.json main.js
                working_directory: examples/old-cypress-config/exclude-files

      - cypress/run:
          name: example-frontend
          requires:
            - cypress/install
          # grab the workspace created by cypress/install job
          attach-workspace: true
          # there are no jobs to follow this one
          # so no need to save the workspace files (saves time)
          no-workspace: true
          working_directory: examples/old-cypress-config/frontend
          start: npm start
          wait-on: 'http://localhost:1234'
          # command: npx cypress run --project examples/frontend
          command: ../node_modules/.bin/cypress run
          # store screenshots and videos
          store_artifacts: true
          post-steps:
            - run: cat examples/old-cypress-config/frontend/.nyc_output/out.json
            # store the created coverage report folder
            # you can click on it in the CircleCI UI
            # to see live static HTML site
            - store_artifacts:
                path: examples/old-cypress-config/frontend/coverage
            # make sure the examples captures 100% of code
            - run:
                command: npx nyc report --check-coverage true --lines 100
                working_directory: examples/old-cypress-config/frontend
            - run:
                name: Check code coverage ðŸ“ˆ
                command: |
                  ../../../node_modules/.bin/check-coverage app.js
                  ../../../node_modules/.bin/check-coverage about.js
                  ../../../node_modules/.bin/check-coverage unit.js
                  ../../../node_modules/.bin/only-covered app.js about.js unit.js
                working_directory: examples/old-cypress-config/frontend

      - cypress/run:
          name: fullstack coverage
          requires:
            - cypress/install
          # grab the workspace created by cypress/install job
          attach-workspace: true
          # there are no jobs to follow this one
          # so no need to save the workspace files (saves time)
          no-workspace: true
          working_directory: examples/old-cypress-config/fullstack
          start: npm start
          wait-on: 'http://localhost:1234'
          command: '../node_modules/.bin/cypress run'
          # store screenshots and videos
          store_artifacts: true
          post-steps:
            # store the created coverage report folder
            # you can click on it in the CircleCI UI
            # to see live static HTML site
            - store_artifacts:
                path: examples/old-cypress-config/fullstack/coverage
            - run:
                command: npm run report
                working_directory: examples/old-cypress-config/fullstack
            - run:
                name: Check code coverage ðŸ“ˆ
                command: |
                  ../../../node_modules/.bin/check-coverage fullstack/server/server.js
                  ../../../node_modules/.bin/check-coverage fullstack/main.js
                  ../../../node_modules/.bin/check-coverage fullstack/string-utils.js
                  ../../../node_modules/.bin/only-covered server.js main.js string-utils.js
                working_directory: examples/old-cypress-config/fullstack

      # leaving out as it doesn't seem to exercise code coverage capabilityes, but cypress testFiles pattern instead
      # - cypress/run:
      #     name: example-one-spec
      #     requires:
      #       - cypress/install
      #     # grab the workspace created by cypress/install job
      #     attach-workspace: true
      #     # there are no jobs to follow this one
      #     # so no need to save the workspace files (saves time)
      #     no-workspace: true
      #     working_directory: examples/old-cypress-config/one-spec
      #     # command: npx cypress run --project examples/one-spec
      #     command: ../node_modules/.bin/cypress run
      #     # store screenshots and videos
      #     store_artifacts: true
      #     post-steps:
      #       - run:
      #           command: cat .nyc_output/out.json
      #           working_directory: examples/old-cypress-config/one-spec
      #       - run:
      #           command: cat coverage/coverage-summary.json
      #           working_directory: examples/old-cypress-config/one-spec
      #       # store the created coverage report folder
      #       # you can click on it in the CircleCI UI
      #       # to see live static HTML site
      #       - store_artifacts:
      #           path: examples/old-cypress-config/one-spec/coverage
      #       # make sure the examples captures 100% of code
      #       - run:
      #           command: npx nyc report --check-coverage true --lines 100
      #           working_directory: examples/old-cypress-config/one-spec
      #       - run:
      #           name: Check code coverage ðŸ“ˆ
      #           command: |
      #             ../../../node_modules/.bin/check-coverage main.js
      #             ../../../node_modules/.bin/only-covered main.js
      #           working_directory: examples/old-cypress-config/one-spec

      # leaving out, doesn't run cypress
      # - cypress/run:
      #     attach-workspace: true
      #     name: example-placeholders
      #     requires:
      #       - cypress/install
      #     # there are no jobs to follow this one
      #     # so no need to save the workspace files (saves time)
      #     no-workspace: true
      #     # command: npx cypress run --project examples/placeholders
      #     command: ../node_modules/.bin/cypress run
      #     # store screenshots and videos
      #     store_artifacts: true
      #     post-steps:
      #       - run: cat examples/old-cypress-config/placeholders/.nyc_output/out.json
      #       - run: cat examples/old-cypress-config/placeholders/coverage/coverage-final.json
      #       # store the created coverage report folder
      #       # you can click on it in the CircleCI UI
      #       # to see live static HTML site
      #       - store_artifacts:
      #           path: examples/old-cypress-config/placeholders/coverage
      #       # make sure the examples captures 100% of code
      #       - run:
      #           command: npx nyc report --check-coverage true --lines 100
      #           working_directory: examples/old-cypress-config/placeholders
      #       - run:
      #           name: Check code coverage ðŸ“ˆ
      #           # we will check the final coverage report
      #           # to make sure it only has files we are interested in
      #           # because there are files covered at 0 in the report
      #           command: |
      #             ../../node_modules/.bin/check-coverage src/a.js
      #             ../../node_modules/.bin/check-coverage src/a.js
      #             ../../node_modules/.bin/only-covered --from coverage/coverage-final.json src/a.js src/b.js
      #           working_directory: examples/old-cypress-config/placeholders

      - cypress/run:
          attach-workspace: true
          name: example-same-folder
          requires:
            - cypress/install
          # there are no jobs to follow this one
          # so no need to save the workspace files (saves time)
          no-workspace: true
          working_directory: examples/old-cypress-config/same-folder
          start: npm start
          wait-on: 'http://localhost:1234'
          # command: npx cypress run --project examples/same-folder
          command: ../node_modules/.bin/cypress run
          # store screenshots and videos
          store_artifacts: true
          post-steps:
            - run: cat examples/old-cypress-config/same-folder/.nyc_output/out.json
            # store the created coverage report folder
            # you can click on it in the CircleCI UI
            # to see live static HTML site
            - store_artifacts:
                path: examples/old-cypress-config/same-folder/coverage
            # make sure the examples captures 100% of code
            - run:
                command: npx nyc report --check-coverage true --lines 100
                working_directory: examples/old-cypress-config/same-folder
            - run:
                command: npx nyc report --check-coverage true --lines 100 --include unit-utils.js
                working_directory: examples/old-cypress-config/same-folder
            - run:
                name: Check code coverage ðŸ“ˆ
                command: |
                  ../../../node_modules/.bin/check-coverage main.js
                  ../../../node_modules/.bin/check-coverage unit-utils.js
                  ../../../node_modules/.bin/only-covered main.js unit-utils.js
                working_directory: examples/old-cypress-config/same-folder

      - cypress/run:
          name: example-support-files
          requires:
            - cypress/install
          # grab the workspace created by cypress/install job
          attach-workspace: true
          # there are no jobs to follow this one
          # so no need to save the workspace files (saves time)
          no-workspace: true
          working_directory: examples/old-cypress-config/support-files
          start: npm start
          wait-on: 'http://localhost:1234'
          # command: npx cypress run --project examples/support-files
          command: ../node_modules/.bin/cypress run
          # store screenshots and videos
          store_artifacts: true
          post-steps:
            - run: cat examples/old-cypress-config/support-files/.nyc_output/out.json
            # store the created coverage report folder
            # you can click on it in the CircleCI UI
            # to see live static HTML site
            - store_artifacts:
                path: examples/old-cypress-config/support-files/coverage
            # make sure the examples captures 100% of code
            - run:
                command: npx nyc report --check-coverage true --lines 100
                working_directory: examples/old-cypress-config/support-files
            - run:
                name: Check code coverage ðŸ“ˆ
                command: |
                  ../../../node_modules/.bin/check-coverage main.js
                  ../../../node_modules/.bin/only-covered main.js
                working_directory: examples/old-cypress-config/support-files

      - cypress/run:
          name: example-ts-example
          requires:
            - cypress/install
          # grab the workspace created by cypress/install job
          attach-workspace: true
          # there are no jobs to follow this one
          # so no need to save the workspace files (saves time)
          no-workspace: true
          working_directory: examples/old-cypress-config/ts-example
          start: npm start
          wait-on: 'http://localhost:1234'
          command: '../node_modules/.bin/cypress run'
          post-steps:
            # store the created coverage report folder
            # you can click on it in the CircleCI UI
            # to see live static HTML site
            - store_artifacts:
                path: examples/old-cypress-config/ts-example/coverage
            - run:
                command: npm run coverage:check
                working_directory: examples/old-cypress-config/ts-example
            - run:
                name: Check code coverage ðŸ“ˆ
                command: |
                  ../../../node_modules/.bin/check-coverage main.ts
                  ../../../node_modules/.bin/check-coverage calc.ts
                  ../../../node_modules/.bin/only-covered main.ts calc.ts
                working_directory: examples/old-cypress-config/ts-example

      - cypress/run:
          name: example-unit-tests-js
          requires:
            - cypress/install
          # grab the workspace created by cypress/install job
          attach-workspace: true
          # there are no jobs to follow this one
          # so no need to save the workspace files (saves time)
          no-workspace: true
          working_directory: examples/old-cypress-config/unit-tests-js
          # command: npx cypress run --project examples/old-cypress-config/unit-tests-js
          command: ../node_modules/.bin/cypress run
          # store screenshots and videos
          store_artifacts: true
          post-steps:
            - run: cat examples/old-cypress-config/unit-tests-js/.nyc_output/out.json
            - run: cat examples/old-cypress-config/unit-tests-js/coverage/coverage-summary.json
            # store the created coverage report folder
            # you can click on it in the CircleCI UI
            # to see live static HTML site
            - store_artifacts:
                path: examples/old-cypress-config/unit-tests-js/coverage
            # make sure the examples captures 100% of code
            - run:
                command: npx nyc report --check-coverage true --lines 100
                working_directory: examples/old-cypress-config/unit-tests-js
            - run:
                name: Check code coverage ðŸ“ˆ
                command: |
                  ../../../node_modules/.bin/check-coverage misc.js
                  ../../../node_modules/.bin/only-covered misc.js
                working_directory: examples/old-cypress-config/unit-tests-js

      - cypress/run:          
          name: example-use-webpack
          requires:
            - cypress/install
          # grab the workspace created by cypress/install job
          attach-workspace: true
          # there are no jobs to follow this one
          # so no need to save the workspace files (saves time)
          no-workspace: true
          working_directory: examples/old-cypress-config/use-webpack
          build: npm run build
          start: npm start
          wait-on: 'http://localhost:1234'
          command: '../node_modules/.bin/cypress run'
          # wrong path when using working_directory
          # https://github.com/cypress-io/circleci-orb/issues/265
          # store screenshots and videos
          # store_artifacts: true
          post-steps:
            - store_artifacts:
                path: examples/old-cypress-config/use-webpack/cypress/videos
            - store_artifacts:
                path: examples/old-cypress-config/use-webpack/cypress/screenshots
            # store the created coverage report folder
            # you can click on it in the CircleCI UI
            # to see live static HTML site
            - store_artifacts:
                path: examples/old-cypress-config/use-webpack/coverage
            - run:
                name: Check code coverage ðŸ“ˆ
                command: |
                  ../../../node_modules/.bin/check-coverage src/index.js
                  ../../../node_modules/.bin/check-coverage src/calc.js
                  ../../../node_modules/.bin/only-covered src/index.js src/calc.js
                working_directory: examples/old-cypress-config/use-webpack

      # - cypress/run:
      #     name: code coverage tests
      #     requires:
      #       - cypress/install
      #     # grab the workspace created by cypress/install job
      #     attach-workspace: true
      #     # we need to start the web application
      #     start: npm start
      #     # there are no jobs to follow this one
      #     # so no need to save the workspace files (saves time)
      #     no-workspace: true
      #     post-steps:
      #       # store the created coverage report folder
      #       # you can click on it in the CircleCI UI
      #       # to see live static HTML site
      #       - store_artifacts:
      #           path: coverage
      #       # print code coverage summary to the terminal
      #       # and make sure there the coverage is above certain limit
      #       - run: npx nyc report --check-coverage true --lines 80
      #       # make sure second page (about.html) has its JavaScript counted and covered
      #       - run: npx nyc report --check-coverage true --lines 100 --include cypress/about.js
      #       # make sure unit tests are covered
      #       - run: npx nyc report --check-coverage true --lines 100 --include cypress/unit.js

      # - cypress/run:
      #     name: Windows test
      #     executor:
      #       # executor comes from the "windows" orb
      #       name: win/default
      #       shell: bash.exe
      #     no-workspace: true
      #     start: npm run start:windows --prefix examples/old-cypress-config/all-files
      #     wait-on: 'http://localhost:1234'
      #     # command: npx cypress run --project examples/all-files
      #     command: ../node_modules/.bin/cypress run
      #     # store screenshots and videos
      #     store_artifacts: true
      #     post-steps:
      #       - run: cat examples/old-cypress-config/all-files/.nyc_output/out.json
      #       - run: cat examples/old-cypress-config/all-files/coverage/coverage-final.json
      #       # store the created coverage report folder
      #       # you can click on it in the CircleCI UI
      #       # to see live static HTML site
      #       - store_artifacts:
      #           path: examples/old-cypress-config/all-files/coverage
      #       # make sure the examples captures 100% of code
      #       - run:
      #           command: npx nyc report --check-coverage true --lines 100
      #           working_directory: examples/old-cypress-config/all-files
      #       - run:
      #           name: Check code coverage ðŸ“ˆ
      #           # we will check the final coverage report
      #           # to make sure it only has files we are interested in
      #           # because there are files covered at 0 in the report
      #           command: |
      #             ../../node_modules/.bin/check-coverage main.js
      #             ../../node_modules/.bin/check-coverage second.js
      #             ../../node_modules/.bin/check-coverage not-covered.js
      #             ../../node_modules/.bin/only-covered --from coverage/coverage-final.json main.js second.js not-covered.js
      #           working_directory: examples/old-cypress-config/all-files

      # - publish:
      #     filters:
      #       branches:
      #         only:
      #           - master
      #           - beta
      #     requires:
      #       - unit
      #       - frontend coverage
      #       - backend coverage
      #       - fullstack coverage
      #       - example-before-each-visit
      #       - example-before-all-visit
      #       - example-ts-example
      #       - example-same-folder
      #       - example-support-files
      #       - example-use-plugins-and-support
      #       - example-one-spec
      #       - example-exclude-files
      #       - example-docker-paths
      #       - example-use-webpack
      #       - example-all-files
      #       - example-placeholders
      #       - example-unit-tests-js
      #       - Windows test
